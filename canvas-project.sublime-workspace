{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ems",
				"ems-modal-content"
			],
			[
				"comm",
				"comm-html-section\tComment - HTML section"
			],
			[
				"script",
				"script"
			],
			[
				"com",
				"comm-section\tComment - Full section comment"
			],
			[
				"src",
				"script\tTag"
			],
			[
				"backgroun",
				"background-color"
			]
		]
	},
	"buffers":
	[
		{
			"file": "sandbox2.html",
			"settings":
			{
				"buffer_size": 573,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/*\n* Gifplayer v0.3.4\n* Customizable jquery plugin to play and stop animated gifs. Similar to 9gag's\n* (c)2014 Rub√©n Torres - rubentdlh@gmail.com\n* Released under the MIT license\n*/\n\n(function (factory) {\n  if(typeof module === \"object\" && typeof module.exports === \"object\") {\n    module.exports = factory(require(\"jquery\"));\n  } else {\n    factory(jQuery);\n  }\n}(function($) {\n\n\tfunction GifPlayer(preview, options){\n\t\tthis.previewElement = preview;\n\t\tthis.options = options;\n\t\tthis.animationLoaded = false;\n\t}\n\n\tGifPlayer.scopes = new Array();\n\n\tGifPlayer.prototype = {\n\n\t\tsupportedFormats: ['gif', 'jpeg', 'jpg', 'png'],\n\n\t\tactivate: function(){\n\t\t\tvar self = this;\n\t\t\tif(this.previewElement.width() === 0){\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tself.activate();\n\t\t\t\t}, 100);\n\t\t\t}else{\n\t\t\t\tself.mode = self.getOption('mode');\n\t\t\t\tself.wrap();\n\t\t\t\tself.addSpinner();\n\t\t\t\tself.addControl();\n\t\t\t\tself.addEvents();\n\t\t\t}\n\t\t},\n\n\t\twrap: function(){\n\t\t\tthis.previewElement.addClass('gifplayer-ready');\n\t\t\tthis.wrapper = this.previewElement.wrap(\"<div class='gifplayer-wrapper'></div>\").parent();\n\t\t\tthis.wrapper.css('width', this.previewElement.width());\n\t\t\tthis.wrapper.css('height', this.previewElement.height());\n\t\t\tthis.previewElement.css('cursor','pointer');\n\t\t},\n\n\t\taddSpinner: function(){\n\t\t\tthis.spinnerElement = $(\"<div class = 'spinner'></div>\");\n\t\t\tthis.wrapper.append(this.spinnerElement);\n\t\t\tthis.spinnerElement.hide();\n\t\t},\n\n\t\tgetOption: function(option){\n\t\t\tvar dataOption = this.previewElement.data(option.toLowerCase());\n\t\t\tif(dataOption != undefined && dataOption != ''){\n\t\t\t\treturn dataOption;\n\t\t\t}else{\n\t\t\t\treturn this.options[option];\n\t\t\t}\n\t\t},\n\n\t\taddControl: function(){\n\t\t\tvar label = this.getOption('label');\n\t\t\tthis.playElement = $(\"<ins class='play-gif'>\" + label + \"</ins>\");\n\t\t\tthis.wrapper.append(this.playElement);\n\t\t\tthis.playElement.css('top', this.previewElement.height()/2 - this.playElement.height()/2);\n\t\t\tthis.playElement.css('left', this.previewElement.width()/2 - this.playElement.width()/2);\n\t\t},\n\n\t\taddEvents: function(){\n\t\t\tvar gp = this;\n\t\t\tvar playOn = this.getOption('playOn');\n\n\t\t\tswitch(playOn){\n\t\t\t\tcase 'click':\n\t\t\t\t\tgp.playElement.on( 'click', function(e){\n\t\t\t\t\t\tgp.previewElement.trigger('click');\n\t\t\t\t\t});\n\t\t\t\t\tgp.previewElement.on( 'click', function(e){\n\t\t\t\t\t\tgp.loadAnimation();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'hover':\n\t\t\t\t\tgp.previewElement.on( 'click mouseover', function(e){\n\t\t\t\t\t\tgp.loadAnimation();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'auto':\n\t\t\t\t\tconsole.log('auto not implemented yet');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(playOn + ' is not accepted as playOn value.');\n\t\t\t}\n\t\t},\n\n\t\tprocessScope: function(){\n\t\t\tvar scope = this.getOption('scope');\n\t\t\tif( scope ){\n\t\t\t\tif(GifPlayer.scopes[scope]){\n\t\t\t\t\tGifPlayer.scopes[scope].stopGif();\n\t\t\t\t}\n\t\t\t\tGifPlayer.scopes[scope] = this;\n\t\t\t}\n\t\t},\n\n\t\tloadAnimation: function(){\n\t\t\tthis.processScope();\n\n\t\t\tthis.spinnerElement.show();\n\n\t\t\tif( this.mode == 'gif'){\n\t\t\t\tthis.loadGif();\n\t\t\t}else if(this.mode == 'video'){\n\t\t\t\tif(!this.videoLoaded){\n\t\t\t\t\tthis.loadVideo();\n\t\t\t\t}else{\n\t\t\t\t\tthis.playVideo();\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// Fire event onPlay\n\t\t\tthis.getOption('onPlay').call(this.previewElement);\n\t\t},\n\n\t\tstopGif: function(){\n\t\t\tthis.gifElement.hide();\n\t\t\tthis.previewElement.show();\n\t\t\tthis.playElement.show();\n\t\t\tthis.resetEvents();\n\t\t\tthis.getOption('onStop').call(this.previewElement);\n\t\t},\n\n\t\tgetFile: function( ext ){\n\t\t\t// Obtain the resource default path\n\t\t\tvar gif = this.getOption(ext);\n\t\t\tif(gif != undefined && gif != ''){\n\t\t\t\treturn gif;\n\t\t\t}else{\n\t\t\t\treplaceString = this.previewElement.attr('src');\n\n\t\t\t\tfor (i = 0; i < this.supportedFormats.length; i++) {\n\t\t\t\t\tpattrn = new RegExp( this.supportedFormats[i]+'$', 'i' );\n\t\t\t\t\treplaceString = replaceString.replace( pattrn, ext );\n\t\t\t\t}\n\n\t\t\t\treturn replaceString;\n\t\t\t}\n\t\t},\n\n\t\tloadGif: function(){\n\t\t\tvar gp = this;\n\n\t\t\tgp.playElement.hide();\n\n\t\t\tif(!this.animationLoaded){\n\t\t\t\tthis.enableAbort();\n\t\t\t}\n\t\t\tvar gifSrc = this.getFile('gif');\n\t\t\tvar gifWidth = this.previewElement.width();\n\t\t\tvar gifHeight = this.previewElement.height();\n\n\t\t\tthis.gifElement=$(\"<img class='gp-gif-element' width='\"+ gifWidth + \"' height=' \"+ gifHeight +\" '/>\");\n\n\t\t\tvar wait = this.getOption('wait');\n\t\t\tif(wait){\n\t\t\t\t//Wait until gif loads\n\t\t\t\tthis.gifElement.load( function(){\n\t\t\t\t\tgp.animationLoaded = true;\n\t\t\t\t\tgp.resetEvents();\n\t\t\t\t\tgp.previewElement.hide();\n\t\t\t\t\tgp.wrapper.append(gp.gifElement);\n\t\t\t\t\tgp.spinnerElement.hide();\n\t\t\t\t\tgp.getOption('onLoadComplete').call(gp.previewElement);\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\t//Try to show gif instantly\n\t\t\t\tgp.animationLoaded = true;\n\t\t\t\tgp.resetEvents();\n\t\t\t\tgp.previewElement.hide();\n\t\t\t\tgp.wrapper.append(gp.gifElement);\n\t\t\t\tgp.spinnerElement.hide();\n\t\t\t}\n\t\t\tthis.gifElement.css('cursor','pointer');\n\t\t\tthis.gifElement.css('position','absolute');\n\t\t\tthis.gifElement.css('top','0');\n\t\t\tthis.gifElement.css('left','0');\n\t\t\tthis.gifElement.attr('src', gifSrc);\n\t\t\tthis.gifElement.click( function(e){\n\t\t\t\t$(this).remove();\n\t\t\t\tgp.stopGif();\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t\tgp.getOption('onLoad').call(gp.previewElement);\n\n\t\t},\n\n\t\tloadVideo: function(){\n\t\t\tthis.videoLoaded = true;\n\n\t\t\tvar videoSrcMp4 = this.getFile('mp4');\n\t\t\tvar videoSrcWebm = this.getFile('webm');\n\t\t\tvar videoWidth = this.previewElement.width();\n\t\t\tvar videoHeight = this.previewElement.height();\n\n\t\t\tthis.videoElement = $('<video class=\"gp-video-element\" width=\"' +\n\t\t\t\tvideoWidth + 'px\" height=\"' + videoHeight + '\" style=\"margin:0 auto;width:' +\n\t\t\t\tvideoWidth + 'px;height:' + videoHeight + 'px;\" autoplay=\"autoplay\" loop=\"loop\" muted=\"muted\" poster=\"' +\n\t\t\t\tthis.previewElement.attr('src') + '\"><source type=\"video/mp4\" src=\"' +\n\t\t\t\tvideoSrcMp4 + '\"><source type=\"video/webm\" src=\"' + videoSrcWebm + '\"></video>');\n\n\t\t\tvar gp = this;\n\n\t\t\tvar checkLoad = function(){\n\t\t\t\tif(gp.videoElement[0].readyState === 4){\n\t\t\t\t\tgp.playVideo();\n\t\t\t\t\tgp.animationLoaded = true;\n\t\t\t\t}else{\n\t\t\t\t\tsetTimeout(checkLoad, 100);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar wait = this.getOption('wait');\n\t\t\tif(wait){\n\t\t\t\tcheckLoad();\n\t\t\t}else{\n\t\t\t\tthis.playVideo();\n\t\t\t}\n\n\t\t\tthis.videoElement.on('click', function(){\n\t\t\t\tif(gp.videoPaused){\n\t\t\t\t\tgp.resumeVideo();\n\t\t\t\t}else{\n\t\t\t\t\tgp.pauseVideo();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tplayVideo: function(){\n\t\t\tthis.spinnerElement.hide();\n\t\t\tthis.previewElement.hide();\n\t\t\tthis.playElement.hide();\n\n\t\t\tthis.gifLoaded = true;\n\t\t\tthis.previewElement.hide();\n\t\t\tthis.wrapper.append(this.videoElement);\n\t\t\tthis.videoPaused = false;\n\t\t\tthis.videoElement[0].play();\n\t\t\tthis.getOption('onPlay').call(this.previewElement);\n\t\t},\n\n\t\tpauseVideo: function(){\n\t\t\tthis.videoPaused = true;\n\t\t\tthis.videoElement[0].pause();\n\t\t\tthis.playElement.show();\n\t\t\tthis.mouseoverEnabled = false;\n\t\t\tthis.getOption('onStop').call(this.previewElement);\n\t\t},\n\n\t\tresumeVideo: function(){\n\t\t\tthis.videoPaused = false;\n\t\t\tthis.videoElement[0].play();\n\t\t\tthis.playElement.hide();\n\t\t\tthis.getOption('onPlay').call(this.previewElement);\n\t\t},\n\n\t\tenableAbort: function(){\n\t\t\tvar gp = this;\n\t\t\tthis.previewElement.click( function(e){\n\t\t\t\tgp.abortLoading(e);\n\t\t\t});\n\t\t\tthis.spinnerElement.click( function(e){\n\t\t\t\tgp.abortLoading(e);\n\t\t\t});\n\t\t},\n\n\t\tabortLoading: function(e){\n\t\t\tthis.spinnerElement.hide();\n\t\t\tthis.playElement.show();\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.gifElement.off('load').on( 'load', function(ev){\n\t\t\t\tev.preventDefault();\n\t\t\t\tev.stopPropagation();\n\t\t\t});\n\t\t\tthis.resetEvents();\n\t\t\tthis.getOption('onStop').call(this.previewElement);\n\t\t},\n\n\t\tresetEvents: function(){\n\t\t\tthis.previewElement.off('click');\n\t\t\tthis.previewElement.off('mouseover');\n\t\t\tthis.playElement.off('click');\n\t\t\tthis.spinnerElement.off('click');\n\t\t\tthis.addEvents();\n\t\t}\n\n\t};\n\n\t$.fn.gifplayer = function(options) {\n\n\t\t// Check if we should operate with some method\n\t\tif (/^(play|stop)$/i.test(options)) {\n\n\t\t\treturn this.each( function(){\n\t\t\t\t// Normalize method's name\n\t\t\t\toptions = options.toLowerCase();\n\t\t\t\tif($(this).hasClass('gifplayer-ready')){\n\t\t\t\t\t//Setup gifplayer object\n\t\t\t\t\tvar gp = new GifPlayer($(this), null);\n\t\t\t\t\tgp.options = {};\n\t\t\t\t\tgp.options = $.extend({}, $.fn.gifplayer.defaults, gp.options);\n\t\t\t\t\tgp.wrapper = $(this).parent();\n\t\t\t\t\tgp.spinnerElement = gp.wrapper.find('.spinner');\n\t\t\t\t\tgp.playElement = gp.wrapper.find('.play-gif');\n\t\t\t\t\tgp.gifElement = gp.wrapper.find('.gp-gif-element');\n\t\t\t\t\tgp.videoElement = gp.wrapper.find('.gp-video-element');\n\t\t\t\t\tgp.mode = gp.getOption('mode');\n\n\t\t\t\t\tswitch(options){\n\t\t\t\t\t\tcase 'play':\n\t\t\t\t\t\t\tgp.playElement.trigger('click');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'stop':\n\t\t\t\t\t\t\tif(!gp.playElement.is(':visible')){\n\t\t\t\t\t\t\t\tif(gp.mode == 'gif'){\n\t\t\t\t\t\t\t\t\tgp.stopGif();\n\t\t\t\t\t\t\t\t}else if( gp.mode == 'video'){\n\t\t\t\t\t\t\t\t\tgp.videoElement.trigger('click');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t}else{ //Create instance\n\t\t\treturn this.each(function(){\n\t\t\t\toptions = $.extend({}, $.fn.gifplayer.defaults, options);\n\t\t\t\tvar gifplayer = new GifPlayer($(this), options);\n\t\t\t\tgifplayer.activate();\n\t\t\t});\n\t\t}\n\t};\n\n\t$.fn.gifplayer.defaults = {\n\t\tlabel: 'GIF',\n\t\tplayOn: 'click',\n\t\tmode: 'gif',\n\t\tgif: '',\n\t\tmp4: '',\n\t\twebm: '',\n\t\twait: false,\n\t\tscope: false,\n\t\tonPlay: function(){},\n\t\tonStop: function(){},\n\t\tonLoad: function(){},\n\t\tonLoadComplete: function(){}\n\t};\n\n\treturn GifPlayer;\n\n}));\n",
			"file": "gifplayer/dist/jquery.gifplayer.js",
			"file_size": 9768,
			"file_write_time": 131607693239438708,
			"settings":
			{
				"buffer_size": 9396,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/G/My Drive/ofy/projects/Going Digital/Geometry Curriculum/Lessons and Assessments/Unit 2/Standard 1  G.GPE.B.5 (template standard)/02 Parallel Lines/G.GPE.B.5 - Parallel Lines.html",
			"settings":
			{
				"buffer_size": 72842,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "snippets.html",
			"settings":
			{
				"buffer_size": 23134,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "template.html",
			"settings":
			{
				"buffer_size": 9971,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "custom-js.js",
			"settings":
			{
				"buffer_size": 2695,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "bundle.js",
			"settings":
			{
				"buffer_size": 351493,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "custom-style.scss",
			"settings":
			{
				"buffer_size": 10251,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "custom-style.css",
			"settings":
			{
				"buffer_size": 265728,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/SASS Build/SASS - Compressed.sublime-build",
					""
				],
				[
					"Packages/SASS Build/SASS.sublime-build",
					""
				]
			],
			[
				"Packages/SASS Build/SASS - Compressed.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 248.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pret",
				"HTMLPrettify"
			],
			[
				"prettif",
				"HTMLPrettify"
			],
			[
				"Jsprettier",
				"Preferences: JsPrettier Settings - Default"
			],
			[
				"sass",
				"SassBeautify"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"format",
				"CodeFormatter: Format Code"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"git",
				"Preferences: GitGutter Settings"
			],
			[
				"boxy",
				"Boxy Theme: Configuration"
			]
		],
		"width": 426.0
	},
	"console":
	{
		"height": 251.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/wamp64/www/canvas-styling"
	],
	"file_history":
	[
		"/C/wamp64/www/canvas-styling/custom-style.scss",
		"/C/wamp64/www/canvas-styling/sandbox.js",
		"/C/Users/jbell/AppData/Roaming/Sublime Text 3/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc.defaults.json",
		"/C/Users/jbell/AppData/Roaming/Sublime Text 3/Packages/JsPrettier/JsPrettier.sublime-settings",
		"/C/Users/jbell/Desktop/temp/tenor.gif",
		"/G/My Drive/ofy/projects/Going Digital/Geometry Curriculum/Lessons and Assessments/Unit 2/Standard 1  G.GPE.B.5 (template standard)/02 Parallel Lines/G.GPE.B.5 - Parallel Lines.html",
		"/C/wamp64/www/canvas-styling/_custom-variables.scss",
		"/C/wamp64/www/canvas-styling/sandbox.css",
		"/C/wamp64/www/canvas-styling/cidilabs/canvas_global.js",
		"/C/wamp64/www/canvas-styling/cidilabs/canvas_global combined.css",
		"/C/Users/jbell/AppData/Roaming/Sublime Text 3/Packages/User/CodeFormatter.sublime-settings",
		"/C/wamp64/www/canvas-styling/node_modules/bootstrap/dist/css/bootstrap.css",
		"/C/wamp64/www/canvas-styling/sandbox2.html",
		"/C/wamp64/www/canvas-styling/sandbox.html",
		"/C/Users/jbell/AppData/Roaming/Sublime Text 3/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/C/Users/jbell/Desktop/temp/giphy.gif",
		"/C/wamp64/www/canvas-styling/custom-style.min.css",
		"/C/wamp64/www/canvas-styling/custom-style.css.map",
		"/C/Users/jbell/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/jbell/AppData/Roaming/Sublime Text 3/Packages/Javascript Beautify/Default (Windows).sublime-keymap",
		"/C/Users/jbell/AppData/Roaming/Sublime Text 3/Packages/Javascript Beautify/JavascriptBeautify.sublime-settings",
		"/C/Users/jbell/Documents/learning/cssMasterClass/course files/Chapter 02/multiple.html"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"iframe",
			"iframe .gsrta2[style]",
			"card",
			"modal",
			"gifplayer",
			">\n",
			"></",
			"!default",
			"card",
			"slab",
			"brie",
			"h4",
			"modal",
			"jquery-ui.min.js",
			"preventDefault()",
			"{\n",
			".</",
			"equation_image",
			"img",
			"<li>\n                                <a href=\"#\">I can determine if two graphed lines are parallel.</a>\n                            </li>",
			"self-check-1-snippet",
			"question",
			"answer",
			"self-check-1-snippet",
			"hide-answer",
			"answer-button",
			"answer-button-container",
			"answer-container",
			"grid-1x2-image-Left-snippet",
			"col-md-6",
			"noborder",
			"div",
			"Right",
			"right",
			"Right",
			"right",
			"Right",
			"concept-block-snippet",
			"concept-block",
			"concept",
			"Concept",
			"tab-content",
			".tab-content",
			"nav-contact",
			"nav-contact-tab",
			"nav-profile",
			"nav-profile-tab",
			"nav-home",
			"nav-home-tab",
			"Prior-knowledge-snippet",
			"Objectives-Snippet",
			"collapsed",
			"Outcomes",
			"heroBanner",
			"Objectives",
			"collapseThree",
			"collapseTwo",
			"iframe[style]",
			"iframe",
			"$(\".ems-container-fluid iframe\").setAttribute(\"scrolling\",\"no\");",
			"headingThree",
			"headingTwo",
			"data-target",
			"accordion",
			"#accordion",
			"kl_quick_check_2_0",
			"kl_quick_check_2",
			"kl_quick_check_answer",
			"kl_quick_check_1"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "sandbox2.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 573,
						"regions":
						{
						},
						"selection":
						[
							[
								493,
								493
							]
						],
						"settings":
						{
							"auto_complete": false,
							"git_gutter_is_enabled": true,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "gifplayer/dist/jquery.gifplayer.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 9396,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								9396
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1245.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/G/My Drive/ofy/projects/Going Digital/Geometry Curriculum/Lessons and Assessments/Unit 2/Standard 1  G.GPE.B.5 (template standard)/02 Parallel Lines/G.GPE.B.5 - Parallel Lines.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 72842,
						"regions":
						{
						},
						"selection":
						[
							[
								145,
								145
							]
						],
						"settings":
						{
							"auto_complete": false,
							"git_gutter_is_enabled": false,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 83.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "snippets.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23134,
						"regions":
						{
						},
						"selection":
						[
							[
								1007,
								1007
							]
						],
						"settings":
						{
							"auto_complete": false,
							"git_gutter_is_enabled": true,
							"open_with_edit": true,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 471.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "template.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9971,
						"regions":
						{
						},
						"selection":
						[
							[
								6685,
								6685
							]
						],
						"settings":
						{
							"auto_complete": false,
							"git_gutter_is_enabled": true,
							"open_with_edit": true,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3814.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "custom-js.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2695,
						"regions":
						{
						},
						"selection":
						[
							[
								1469,
								1469
							]
						],
						"settings":
						{
							"auto_complete": false,
							"git_gutter_is_enabled": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "bundle.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 351493,
						"regions":
						{
						},
						"selection":
						[
							[
								2195,
								2195
							]
						],
						"settings":
						{
							"auto_complete": false,
							"git_gutter_is_enabled": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 432.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "custom-style.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10251,
						"regions":
						{
						},
						"selection":
						[
							[
								2169,
								2175
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Boxy Monokai.tmTheme",
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Sass/Syntaxes/SCSS.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2226.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "custom-style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 265728,
						"regions":
						{
						},
						"selection":
						[
							[
								256840,
								256861
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Boxy Monokai.tmTheme",
							"git_gutter_is_enabled": true,
							"open_with_edit": true,
							"syntax": "Packages/CSS/CSS.sublime-syntax"
						},
						"translation.x": 2308405.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.400141643059,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 129.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "canvas-project.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 268.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
